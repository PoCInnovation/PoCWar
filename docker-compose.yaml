version: '3'

services:
  db:
    image: 'postgres'
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pocwar

  webapp:
    image: $BASE_NODE_IMAGE_NAME
    command: /bin/bash -c "npm install && npm run $START_ENVIRONMENT"
    working_dir: $REPO_MOUNT_POINT
    stdin_open: true
    environment:
      - BACKEND_BASE_URL
      - PORT=3051
    ports:
      - 80:3051
    volumes:
      - ./app:$REPO_MOUNT_POINT:delegated
    networks:
      - pocwar

  backend:
    image: $BASE_NODE_IMAGE_NAME
    working_dir: $REPO_MOUNT_POINT
    command: /bin/bash startup.sh
    ports:
      - 8081:8081
    environment:
      - START_ENVIRONMENT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DATABASE_URL=$POSTGRES_URL
      - JWT_SECRET
      - PATH_HOST
      - PORT=8081
    volumes:
      - ./backend:$REPO_MOUNT_POINT:delegated
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      - db
    networks:
      - pocwar

networks:
  pocwar:
